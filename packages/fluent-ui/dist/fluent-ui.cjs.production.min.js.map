{"version":3,"file":"fluent-ui.cjs.production.min.js","sources":["../src/AddButton/AddButton.tsx","../src/IconButton/IconButton.tsx","../src/ArrayFieldTemplate/ArrayFieldTemplate.tsx","../src/TitleField/TitleField.tsx","../src/Fields/Fields.ts","../src/DescriptionField/DescriptionField.tsx","../src/FieldTemplate/FieldTemplate.tsx","../src/ObjectFieldTemplate/ObjectFieldTemplate.tsx","../src/SubmitButton/SubmitButton.tsx","../src/TextWidget/TextWidget.tsx","../src/CheckboxWidget/CheckboxWidget.tsx","../src/CheckboxesWidget/CheckboxesWidget.tsx","../src/ColorWidget/ColorWidget.tsx","../src/DateWidget/DateWidget.tsx","../src/DateTimeWidget/DateTimeWidget.tsx","../src/RadioWidget/RadioWidget.tsx","../src/RangeWidget/RangeWidget.tsx","../src/SelectWidget/SelectWidget.tsx","../src/UpDownWidget/UpDownWidget.tsx","../src/Widgets/Widgets.ts","../src/AltDateWidget/AltDateWidget.tsx","../src/AltDateTimeWidget/AltDateTimeWidget.tsx","../src/EmailWidget/EmailWidget.tsx","../src/PasswordWidget/PasswordWidget.tsx","../src/TextareaWidget/TextareaWidget.tsx","../src/URLWidget/URLWidget.tsx","../src/Theme/Theme.ts","../src/ErrorList/ErrorList.tsx","../src/FuiForm/FuiForm.tsx","../src/index.ts"],"sourcesContent":["import React from \"react\";\n\nimport { AddButtonProps } from \"@rjsf/core\";\n\nimport { IIconProps, CommandBarButton } from \"@fluentui/react\";\n\nconst addIcon: IIconProps = { iconName: \"Add\" };\n\nconst AddButton = (props: AddButtonProps) => (\n  <CommandBarButton\n    style={{ height: \"32px\" }}\n    iconProps={addIcon}\n    text=\"Add item\"\n    className={props.className}\n    onClick={e => props.onClick(e as any)}\n    disabled={props.disabled}\n    />\n\n);\n\nexport default AddButton;\n","import React from \"react\";\n\nimport { IconButton, IIconProps } from \"@fluentui/react\";\nimport { AddButtonProps as FuiIconButtonProps } from \"@rjsf/core\";\n\nconst mappings: {[x: string]: string} = {\n  remove: \"Delete\",\n  \"arrow-up\": \"Up\",\n  \"arrow-down\": \"Down\",\n};\n\ntype IconButtonProps = FuiIconButtonProps & {\n  icon: string;\n};\n\nexport default (props: IconButtonProps) => (\n <IconButton\n    disabled={props.disabled}\n    onClick={e => props.onClick(e as any)}\n    iconProps={{\n      iconName: mappings[props.icon]\n    }}\n    color=\"secondary\" />\n);\n","import React from \"react\";\n\nimport { utils } from \"@rjsf/core\";\n\nimport { ArrayFieldTemplateProps, IdSchema } from \"@rjsf/core\";\n\nimport AddButton from \"../AddButton/AddButton\";\nimport IconButton from \"../IconButton/IconButton\";\n\nconst rightJustify = {\n  float: \"right\"\n} as React.CSSProperties;\n\nconst { isMultiSelect, getDefaultRegistry } = utils;\n\nconst ArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  const { schema, registry = getDefaultRegistry() } = props;\n\n  // TODO: update types so we don't have to cast registry as any\n  if (isMultiSelect(schema, (registry as any).rootSchema)) {\n    return <DefaultFixedArrayFieldTemplate {...props} />;\n  } else {\n    return <DefaultNormalArrayFieldTemplate {...props} />;\n  }\n};\n\ntype ArrayFieldTitleProps = {\n  TitleField: any;\n  idSchema: IdSchema;\n  title: string;\n  required: boolean;\n};\n\nconst ArrayFieldTitle = ({\n  TitleField,\n  idSchema,\n  title,\n  required,\n}: ArrayFieldTitleProps) => {\n  if (!title) {\n    return null;\n  }\n\n  const id = `${idSchema.$id}__title`;\n  return <TitleField id={id} title={title} required={required} />;\n};\n\ntype ArrayFieldDescriptionProps = {\n  DescriptionField: any;\n  idSchema: IdSchema;\n  description: string;\n};\n\nconst ArrayFieldDescription = ({\n  DescriptionField,\n  idSchema,\n  description,\n}: ArrayFieldDescriptionProps) => {\n  if (!description) {\n    return null;\n  }\n\n  const id = `${idSchema.$id}__description`;\n  return <DescriptionField id={id} description={description} />;\n};\n\n// Used in the two templates\nconst DefaultArrayItem = (props: any) => {\n  return (\n    <div key={props.key} className=\"ms-Grid\" dir=\"ltr\">\n      <div className=\"ms-Grid-row\">\n        <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg9\">\n          <div className=\"ms-Grid-row\">\n          {props.children}\n          </div>\n        </div>\n        <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg3\" style={{textAlign: \"right\"}}>\n          <IconButton\n            icon=\"arrow-up\"\n            className=\"array-item-move-up\"\n            disabled={props.disabled || props.readonly || !props.hasMoveUp}\n            onClick={props.onReorderClick(props.index, props.index - 1)}\n          />\n          <IconButton\n            icon=\"arrow-down\"\n            className=\"array-item-move-down\"\n            disabled={props.disabled || props.readonly || !props.hasMoveDown}\n            onClick={props.onReorderClick(props.index, props.index + 1)}\n          />\n          <IconButton\n            icon=\"remove\"\n            className=\"array-item-remove\"\n            disabled={props.disabled || props.readonly}\n            onClick={props.onDropIndexClick(props.index)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DefaultFixedArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  return (\n    <fieldset className={props.className}>\n      <ArrayFieldTitle\n        key={`array-field-title-${props.idSchema.$id}`}\n        TitleField={props.TitleField}\n        idSchema={props.idSchema}\n        title={props.uiSchema[\"ui:title\"] || props.title}\n        required={props.required}\n      />\n\n      {(props.uiSchema[\"ui:description\"] || props.schema.description) && (\n        <div\n          className=\"field-description\"\n          key={`field-description-${props.idSchema.$id}`}>\n          {props.uiSchema[\"ui:description\"] || props.schema.description}\n        </div>\n      )}\n\n      <div\n        className=\"row array-item-list\"\n        key={`array-item-list-${props.idSchema.$id}`}>\n        {props.items && props.items.map(DefaultArrayItem)}\n      </div>\n\n      {props.canAdd && (\n        <span style={rightJustify}>\n          <AddButton\n            className=\"array-item-add\"\n            onClick={props.onAddClick}\n            disabled={props.disabled || props.readonly}\n          />\n        </span>\n      )}\n    </fieldset>\n  );\n};\n\nconst DefaultNormalArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  return (\n    <>\n      <ArrayFieldTitle\n        key={`array-field-title-${props.idSchema.$id}`}\n        TitleField={props.TitleField}\n        idSchema={props.idSchema}\n        title={props.uiSchema[\"ui:title\"] || props.title}\n        required={props.required}\n      />\n\n      {(props.uiSchema[\"ui:description\"] || props.schema.description) && (\n        <ArrayFieldDescription\n          key={`array-field-description-${props.idSchema.$id}`}\n          DescriptionField={props.DescriptionField}\n          idSchema={props.idSchema}\n          description={\n            props.uiSchema[\"ui:description\"] || props.schema.description\n          }\n        />\n      )}\n\n      {props.items && props.items.map(p => DefaultArrayItem(p))}\n\n      {props.canAdd && (\n        <span style={rightJustify}>\n          <AddButton\n            className=\"array-item-add\"\n            onClick={props.onAddClick}\n            disabled={props.disabled || props.readonly}\n          />\n        </span>\n      )}\n    </>\n  );\n};\n\nexport default ArrayFieldTemplate;\n","import React from \"react\";\nimport { FieldProps } from \"@rjsf/core\";\nimport { Label } from \"@fluentui/react\";\n\nconst styles = {\n  root: [\n    {\n      fontSize: 24,\n      marginBottom: 20,\n      paddingBottom: 0\n    },\n  ],\n};\n\nconst TitleField = ({ title }: FieldProps) => (\n  <>\n    <Label styles={styles}>{title}</Label>\n  </>\n);\n\nexport default TitleField;\n","import DescriptionField from '../DescriptionField/DescriptionField';\nimport TitleField from '../TitleField/TitleField';\n\nexport default {\n  DescriptionField,\n  TitleField,\n};\n","import React from \"react\";\n\nimport { FieldProps } from \"@rjsf/core\";\n\nimport { Text } from \"@fluentui/react\";\n\nconst DescriptionField = ({ description }: FieldProps) => {\n  if (description) {\n    return <Text>{description}</Text>;\n  }\n\n  return null;\n};\n\nexport default DescriptionField;\n","import React from \"react\";\nimport { FieldTemplateProps } from \"@rjsf/core\";\nimport { Text, Label } from \"@fluentui/react\";\nimport { List } from \"@fluentui/react\";\n\nconst styles = {\n  root: [\n    {\n      fontSize: 24,\n    },\n  ],\n};\n\nconst FieldTemplate = ({\n  id,\n  children,\n  displayLabel,\n  rawErrors = [],\n  rawHelp,\n  rawDescription,\n  classNames,\n  label,\n  required\n}: FieldTemplateProps) => {\n  // TODO: do this better by not returning the form-group class from master.\n  classNames = \"ms-Grid-col ms-sm12 \" + classNames.replace(\"form-group\", \"\");\n  return (\n    <div className={classNames} style={{marginBottom: 15}}>\n      {children}\n      {/* {displayLabel && <Label>\n        {label}\n        {required && <span style={{color: \"rgb(164, 38, 44)\", fontSize: \"12px\", fontWeight: \"normal\"}}>*</span>}\n      </Label>} */}\n      {rawDescription && <Text>{rawDescription}</Text>}\n      {rawErrors.length > 0 && <List items={rawErrors}>})}</List>}\n      {rawHelp && <Text id={id}>{rawHelp}</Text>}\n    </div>\n  );\n};\n\nexport default FieldTemplate;\n","import React from \"react\";\nimport { ObjectFieldTemplateProps } from \"@rjsf/core\";\n\nconst ObjectFieldTemplate = ({\n  DescriptionField,\n  description,\n  TitleField,\n  title,\n  properties,\n  required,\n  uiSchema,\n  idSchema,\n}: ObjectFieldTemplateProps) => {\n  return (\n    <>\n      {(uiSchema[\"ui:title\"] || title) && (\n        <TitleField\n          id={`${idSchema.$id}-title`}\n          title={title}\n          required={required}\n        />\n      )}\n      {description && (\n        <DescriptionField\n          id={`${idSchema.$id}-description`}\n          description={description}\n        />\n      )}\n\n      <div className=\"ms-Grid\" dir=\"ltr\">\n        <div className=\"ms-Grid-row\">\n          {properties.map((element: any) => element.content)}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ObjectFieldTemplate;\n","import React from \"react\";\nimport { PrimaryButton } from \"@fluentui/react\";\nexport default () => (\n  <div>\n    <br />\n    <div className=\"ms-Grid-col ms-sm12\">\n      <PrimaryButton text=\"Submit\" type=\"submit\" />\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { TextField } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\n// Keys of ITextFieldProps from @fluentui/react\nconst allowedProps = [\n  \"multiline\",\n  \"resizable\",\n  \"autoAdjustHeight\",\n  \"underlined\",\n  \"borderless\",\n  \"label\",\n  \"onRenderLabel\",\n  \"description\",\n  \"onRenderDescription\",\n  \"prefix\",\n  \"suffix\",\n  \"onRenderPrefix\",\n  \"onRenderSuffix\",\n  \"iconProps\",\n  \"defaultValue\",\n  \"value\",\n  \"disabled\",\n  \"readOnly\",\n  \"errorMessage\",\n  \"onChange\",\n  \"onNotifyValidationResult\",\n  \"onGetErrorMessage\",\n  \"deferredValidationTime\",\n  \"className\",\n  \"inputClassName\",\n  \"ariaLabel\",\n  \"validateOnFocusIn\",\n  \"validateOnFocusOut\",\n  \"validateOnLoad\",\n  \"theme\",\n  \"styles\",\n  \"autoComplete\",\n  \"mask\",\n  \"maskChar\",\n  \"maskFormat\",\n  \"type\",\n];\n\nconst TextWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  rawErrors,\n}: WidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  return (\n    <TextField\n      id={id}\n      label={label || schema.title}\n      autoFocus={autofocus}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      name={name}\n      type={schema.type as string}\n      value={value ? value : \"\"}\n      onChange={_onChange as any}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      errorMessage={(rawErrors || []).join(\"\\n\")}\n      {...uiProps}\n    />\n  );\n};\n\nexport default TextWidget;\n","import React from \"react\";\nimport { Checkbox, Label } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\n// Keys of ICheckboxProps from @fluentui/react\nexport const allowedProps = [\n  \"ariaDescribedBy\",\n  \"ariaLabel\",\n  \"ariaPositionInSet\",\n  \"ariaSetSize\",\n  \"boxSide\",\n  \"checked\",\n  \"checkmarkIconProps\",\n  \"className\",\n  \"componentRef\",\n  \"defaultChecked\",\n  \"defaultIndeterminate\",\n  \"disabled\",\n  \"indeterminate\",\n  \"inputProps\",\n  \"keytipProps\",\n  \"label\",\n  \"onChange\",\n  \"onRenderLabel\",\n  \"styles\",\n  \"theme\"\n];\n\nconst CheckboxWidget = (props: WidgetProps) => {\n  const {\n    id,\n    value,\n    // required,\n    disabled,\n    readonly,\n    label,\n    schema,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    options,\n  } = props;\n\n  const _onChange = React.useCallback(({}, checked?: boolean): void => {\n    onChange(checked);\n  }, []);\n\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onFocus(id, value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n\n  return (\n    <>\n        <Checkbox\n          id={id}\n          label={label || schema.title}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onBlur={_onBlur}\n          onFocus={_onFocus}\n          checked={typeof value === \"undefined\" ? false : value}\n          onChange={_onChange}\n          {...uiProps}\n        />\n    </>\n  );\n};\n\nexport default CheckboxWidget;\n","import React from \"react\";\nimport { Checkbox, Label } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport { allowedProps } from \"../CheckboxWidget\";\nimport _pick from \"lodash/pick\";\n\nconst styles_red = {\n      // TODO: get this color from theme.\n      color: \"rgb(164, 38, 44)\",\n      fontSize: 12,\n      fontWeight: \"normal\" as any,\n      fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;`\n    };\n\nconst selectValue = (value: any, selected: any, all: any) => {\n  const at = all.indexOf(value);\n  const updated = selected.slice(0, at).concat(value, selected.slice(at));\n\n  // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n  return updated.sort((a: any, b: any) => all.indexOf(a) > all.indexOf(b));\n};\n\nconst deselectValue = (value: any, selected: any) => {\n  return selected.filter((v: any) => v !== value);\n};\n\nconst CheckboxesWidget = ({\n  schema,\n  label,\n  id,\n  disabled,\n  options,\n  value,\n  autofocus,\n  readonly,\n  required,\n  onChange,\n  onBlur,\n  onFocus,\n  rawErrors = [],\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const _onChange = (option: any) => (\n    _ev?: React.FormEvent<HTMLElement>,\n    checked?: boolean\n  ) => {\n    const all = (enumOptions as any).map(({ value }: any) => value);\n\n    if (checked) {\n      onChange(selectValue(option.value, value, all));\n    } else {\n      onChange(deselectValue(option.value, value));\n    }\n  };\n\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onBlur(id, value);\n\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onFocus(id, value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n\n  return (\n    <>\n      <Label>\n        {label || schema.title}\n        {required && <span style={styles_red}>&nbsp;*</span>}\n      </Label>\n      {(enumOptions as any).map((option: any, index: number) => {\n        const checked = value.indexOf(option.value) !== -1;\n        const itemDisabled =\n          enumDisabled && (enumDisabled as any).indexOf(option.value) != -1;\n        return (\n          <Checkbox\n            id={`${id}_${index}`}\n            checked={checked}\n            label={option.label}\n            disabled={disabled || itemDisabled || readonly}\n            autoFocus={autofocus && index === 0}\n            onChange={_onChange(option)}\n            onBlur={_onBlur}\n            onFocus={_onFocus}\n            key={index}\n            {...uiProps}\n          />\n        );\n      })}\n      <span style={styles_red}>{(rawErrors || []).join(\"\\n\")}</span>\n    </>\n  );\n};\n\nexport default CheckboxesWidget;\n","import React from \"react\";\nimport {\n  ColorPicker,\n  IColorPickerProps,\n  IColor,\n  IColorPickerStyles,\n  getColorFromString,\n  Label,\n} from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\nimport { useConstCallback } from \"@uifabric/react-hooks\";\n\nconst styles_red = {\n  // TODO: get this color from theme.\n  color: \"rgb(164, 38, 44)\",\n  fontSize: 12,\n  fontWeight: \"normal\" as any,\n  fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;`,\n};\n\n// Keys of IColorPickerProps from @fluentui/react\nconst allowedProps = [\n  \"componentRef\",\n  \"color\",\n  \"strings\",\n  \"onChange\",\n  \"alphaType\",\n  \"alphaSliderHidden\",\n  \"hexLabel\",\n  \"redLabel\",\n  \"greenLabel\",\n  \"blueLabel\",\n  \"alphaLabel\",\n  \"className\",\n  \"theme\",\n  \"styles\",\n  \"showPreview\",\n];\n\nconst ColorWidget = ({\n  id,\n  schema,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  label,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const updateColor = (ev: any, colorObj: IColor) => {\n    onChange(colorObj.hex);\n  };\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n\n  return (\n    <>\n      <Label>\n        {label || schema.title}\n        {required && <span style={styles_red}>&nbsp;*</span>}\n      </Label>\n      <ColorPicker\n        color={getColorFromString(value) as any}\n        onChange={updateColor}\n        alphaType={\"alpha\"}\n        showPreview={true}\n        {...uiProps}\n      />\n    </>\n  );\n};\nexport default ColorWidget;\n","import React from \"react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport {\n  DatePicker,\n  DayOfWeek,\n  IDatePickerStrings,\n  mergeStyleSets,\n} from \"@fluentui/react\";\nimport _pick from \"lodash/pick\";\nimport { utils } from \"@rjsf/core\";\n\nconst { pad } = utils;\n\n// Keys of IDropdownProps from @fluentui/react\nconst allowedProps = [\n  \"componentRef\",\n  \"styles\",\n  \"theme\",\n  \"calloutProps\",\n  \"calendarProps\",\n  \"textField\",\n  \"calendarAs\",\n  \"onSelectDate\",\n  \"label\",\n  \"isRequired\",\n  \"disabled\",\n  \"ariaLabel\",\n  \"underlined\",\n  \"pickerAriaLabel\",\n  \"isMonthPickerVisible\",\n  \"showMonthPickerAsOverlay\",\n  \"allowTextInput\",\n  \"disableAutoFocus\",\n  \"placeholder\",\n  \"today\",\n  \"value\",\n  \"formatDate\",\n  \"parseDateFromString\",\n  \"firstDayOfWeek\",\n  \"strings\",\n  \"highlightCurrentMonth\",\n  \"highlightSelectedMonth\",\n  \"showWeekNumbers\",\n  \"firstWeekOfYear\",\n  \"showGoToToday\",\n  \"borderless\",\n  \"className\",\n  \"dateTimeFormatter\",\n  \"minDate\",\n  \"maxDate\",\n  \"initialPickerDate\",\n  \"allFocusable\",\n  \"onAfterMenuDismiss\",\n  \"showCloseButton\",\n  \"tabIndex\"\n];\n\nconst controlClass = mergeStyleSets({\n  control: {\n    margin: \"0 0 15px 0\",\n  },\n});\n\n// TODO: move to utils.\n// TODO: figure out a standard format for this, as well as\n// how we can get this to work with locales.\nconst formatDate = (date?: Date) => {\n  if (!date) {\n    return \"\";\n  }\n  const yyyy = pad(date.getFullYear(), 4);\t\n  const MM = pad(date.getMonth() + 1, 2);\t\n  const dd = pad(date.getDate(), 2);\n  return `${yyyy}-${MM}-${dd}`\n}\n\nconst parseDate = (dateStr?: string) => {\n  if (!dateStr) {\n    return undefined;\n  }\n  const [year, month, day] = dateStr.split(\"-\").map(e => parseInt(e));\n  var dt = new Date(year, month - 1, day);\n  return dt;\n}\n\nconst DateWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  placeholder,\n  schema,\n  rawErrors,\n}: WidgetProps) => {\n  const _onSelectDate = (date: Date | null | undefined) => {\n    if (date) {\n      const formatted = formatDate(date);\n      formatted && onChange(formatted);\n    }\n  }\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  return (\n    <DatePicker\n      className={controlClass.control}\n      firstDayOfWeek={DayOfWeek.Sunday}\n      placeholder={placeholder}\n      ariaLabel=\"Select a date\"\n      isRequired={required}\n      label={label}\n      onSelectDate={_onSelectDate}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      value={parseDate(value)}\n      {...uiProps}\n    />\n  );\n};\n\nexport default DateWidget;\n","import React from \"react\";\n\nimport { WidgetProps, utils } from \"@rjsf/core\";\n\nimport TextWidget from \"../TextWidget\";\n\nconst { localToUTC, utcToLocal } = utils;\n\n\nconst DateTimeWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n\n  const value = utcToLocal(props.value);\n  const onChange = (value: any) => {\n    props.onChange(localToUTC(value));\n  };\n  let options = {\n    ...props.options,\n    props: {\n      type: \"datetime-local\",\n      ...uiProps,\n    },\n  };\n  // TODO: rows and columns.\n  return <TextWidget {...props} options={options} value={value} onChange={onChange} />;\n};\n\nexport default DateTimeWidget;\n","import React from \"react\";\nimport { ChoiceGroup, IChoiceGroupOption } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\n// Keys of IChoiceGroupProps from @fluentui/react\nconst allowedProps = [\n  \"componentRef\",\n  \"options\",\n  \"defaultSelectedKey\",\n  \"selectedKey\",\n  \"onChange\",\n  \"label\",\n  \"onChanged\",\n  \"theme\",\n  \"styles\",\n  \"ariaLabelledBy\"\n];\n\nconst RadioWidget = ({\n  id,\n  schema,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  label,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  function _onChange(\n    ev?: React.FormEvent<HTMLElement | HTMLInputElement>,\n    option?: IChoiceGroupOption\n  ): void {\n    if (option) {\n      onChange(option.key);\n    }\n  }\n\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const row = options ? options.inline : false;\n\n  const newOptions = (enumOptions as {value: any, label: any}[]).map(option => ({\n    key: option.value,\n    text: option.label,\n    disabled: (enumDisabled as any[] || []).indexOf(option.value) !== -1\n  }));\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  return (\n    <ChoiceGroup\n      options={newOptions as any}\n      onChange={_onChange}\n      onFocus={_onFocus}\n      onBlur={_onBlur}\n      label={label || schema.title}\n      required={required}\n      selectedKey={value}\n      {...uiProps}\n    />\n  );\n};\n\nexport default RadioWidget;\n","import React from \"react\";\nimport { Slider, Label } from \"@fluentui/react\";\n\nimport { utils } from \"@rjsf/core\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\nconst { rangeSpec } = utils;\n\nconst styles_red = {\n  // TODO: get this color from theme.\n  color: \"rgb(164, 38, 44)\",\n  fontSize: 12,\n  fontWeight: \"normal\" as any,\n  fontFamily: `\"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;`,\n};\n\n// Keys of ISliderProps from @fluentui/react\nconst allowedProps = [\n  \"componentRef\",\n  \"styles?\",\n  \"theme\",\n  \"label\",\n  \"defaultValue\",\n  \"value\",\n  \"min\",\n  \"max\",\n  \"step\",\n  \"showValue\",\n  \"onChange\",\n  \"ariaLabel\",\n  \"ariaValueText\",\n  \"vertical\",\n  \"disabled\",\n  \"snapToStep\",\n  \"className\",\n  \"buttonProps\",\n  \"valueFormat\",\n  \"originFromZero\",\n];\n\nconst RangeWidget = ({\n  value,\n  readonly,\n  disabled,\n  onBlur,\n  onFocus,\n  options,\n  schema,\n  //formContext,\n  //registry,\n  //rawErrors,\n  onChange,\n  required,\n  label,\n  id,\n}: WidgetProps) => {\n  let sliderProps = { value, label, id, ...rangeSpec(schema) };\n\n  const _onChange = (value: number) => onChange(value);\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  return (\n    <>\n      <Label>\n        {label || schema.title}\n        {required && <span style={styles_red}>&nbsp;*</span>}\n      </Label>\n      <Slider\n        disabled={disabled || readonly}\n        min={sliderProps.min}\n        max={sliderProps.max}\n        step={sliderProps.step}\n        onChange={_onChange}\n        snapToStep\n        {...uiProps}\n      />\n    </>\n  );\n};\n\nexport default RangeWidget;\n","import React, { useState } from \"react\";\nimport { Label, Dropdown, IDropdownOption } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\n\n// Keys of IDropdownProps from @fluentui/react\nconst allowedProps = [\n  \"placeHolder\",\n  \"options\",\n  \"onChange\",\n  \"onChanged\",\n  \"onRenderLabel\",\n  \"onRenderPlaceholder\",\n  \"onRenderPlaceHolder\",\n  \"onRenderTitle\",\n  \"onRenderCaretDown\",\n  \"dropdownWidth\",\n  \"responsiveMode\",\n  \"defaultSelectedKeys\",\n  \"selectedKeys\",\n  \"multiselectDelimiter\",\n  \"notifyOnReselect\",\n  \"isDisabled\",\n  \"keytipProps\",\n  \"theme\",\n  \"styles\",\n\n  // ISelectableDroppableTextProps\n  \"componentRef\",\n  \"label\",\n  \"ariaLabel\",\n  \"id\",\n  \"className\",\n  \"defaultSelectedKey\",\n  \"selectedKey\",\n  \"multiSelect\",\n  \"options\",\n  \"onRenderContainer\",\n  \"onRenderList\",\n  \"onRenderItem\",\n  \"onRenderOption\",\n  \"onDismiss\",\n  \"disabled\",\n  \"required\",\n  \"calloutProps\",\n  \"panelProps\",\n  \"errorMessage\",\n  \"placeholder\",\n  \"openOnKeyboardFocus\"\n];\n\nconst SelectWidget = ({\n  schema,\n  id,\n  options,\n  label,\n  required,\n  disabled,\n  readonly,\n  value,\n  multiple,\n  autofocus,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const _onChange = (\n    _ev?: React.FormEvent<HTMLElement>,\n    item?: IDropdownOption\n  ) => {\n    if (!item) {\n      return;\n    }\n    if (multiple) {\n      const valueOrDefault = value || [];\n      if (item.selected) {\n        onChange([...valueOrDefault, item.key]);\n      } else {\n        onChange(valueOrDefault.filter((key: any) => key !== item.key));\n      }\n    } else {\n      onChange(item.key);\n    }\n  };\n  const _onBlur = (e: any) => onBlur(id, e.target.value);\n\n  const _onFocus = (e: any) => onFocus(id, e.target.value);\n\n  const newOptions = (enumOptions as {value: any, label: any}[]).map(option => ({\n    key: option.value,\n    text: option.label,\n    disabled: (enumDisabled as any[] || []).indexOf(option.value) !== -1\n  }));\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n  return (\n    <>\n      <Label>{label || schema.title}</Label>\n      <Dropdown\n        multiSelect={multiple}\n        defaultSelectedKey={value}\n        required={required}\n        options={newOptions}\n        disabled={disabled || readonly}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        {...uiProps}\n      />\n    </>\n  );\n};\n\nexport default SelectWidget;\n","import React from \"react\";\nimport { Label } from \"@fluentui/react\";\nimport { SpinButton } from \"@fluentui/react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport _pick from \"lodash/pick\";\nimport { utils } from \"@rjsf/core\";\n\nconst { rangeSpec } = utils;\n\n// Keys of ISpinButtonProps from @fluentui/react\nconst allowedProps = [\n  \"ariaDescribedBy\",\n  \"ariaLabel\",\n  \"ariaPositionInSet\",\n  \"ariaSetSize\",\n  \"ariaValueNow\",\n  \"ariaValueText\",\n  \"className\",\n  \"componentRef\",\n  \"decrementButtonAriaLabel\",\n  \"decrementButtonIcon\",\n  \"defaultValue\",\n  \"disabled\",\n  \"downArrowButtonStyles\",\n  \"getClassNames\",\n  \"iconButtonProps\",\n  \"iconProps\",\n  \"incrementButtonAriaLabel\",\n  \"incrementButtonIcon\",\n  \"inputProps\",\n  \"keytipProps\",\n  \"label\",\n  \"labelPosition\",\n  \"max\",\n  \"min\",\n  \"onBlur\",\n  \"onDecrement\",\n  \"onFocus\",\n  \"onIncrement\",\n  \"onValidate\",\n  \"precision\",\n  \"step\",\n  \"styles\",\n  \"theme\",\n  \"title\",\n  \"upArrowButtonStyles\",\n  \"value\",\n];\n\nconst UpDownWidget = ({\n  id,\n  required,\n  readonly,\n  disabled,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  options,\n  schema,\n}: // autofocus,\nWidgetProps) => {\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) => onChange(Number(value));\n\n  let { min, max, step } = rangeSpec(schema);\n  if (min === undefined) {\n    min = -1 * Infinity;\n  }\n  if (max === undefined) {\n    max = Infinity;\n  }\n  if (step === undefined) {\n    step = 1;\n  }\n\n  const _onIncrement = (value: string) => {\n    if (Number(value) + step! <= max!) onChange(Number(value) + step!);\n  };\n\n  const _onDecrement = (value: string) => {\n    if (Number(value) - step! >= min!) onChange(Number(value) - step!);\n  };\n\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const requiredSymbol = required ? \"*\" : \"\";\n\n  const uiProps = _pick(options.props || {}, allowedProps);\n\n  return (\n    <>\n      {/* TODO: add label for= attribute */}\n      <Label htmlFor={id}>{label + requiredSymbol}</Label>\n      <SpinButton\n        id={id}\n        min={min}\n        max={max}\n        step={step}\n        incrementButtonAriaLabel={\"Increase value by 1\"}\n        decrementButtonAriaLabel={\"Decrease value by 1\"}\n        disabled={disabled || readonly}\n        value={value || value === 0 ? value : \"\"}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        onChange={_onChange}\n        onIncrement={_onIncrement}\n        onDecrement={_onDecrement}\n        for=\"\"\n        {...uiProps}\n      />\n    </>\n  );\n};\n\nexport default UpDownWidget;\n","import AltDateWidget from \"../AltDateWidget/AltDateWidget\";\nimport AltDateTimeWidget from \"../AltDateTimeWidget/AltDateTimeWidget\";\nimport CheckboxWidget from \"../CheckboxWidget/CheckboxWidget\";\nimport CheckboxesWidget from \"../CheckboxesWidget/CheckboxesWidget\";\nimport ColorWidget from \"../ColorWidget/ColorWidget\";\nimport DateWidget from \"../DateWidget/DateWidget\";\nimport DateTimeWidget from \"../DateTimeWidget/DateTimeWidget\";\nimport EmailWidget from \"../EmailWidget/EmailWidget\";\nimport PasswordWidget from \"../PasswordWidget/PasswordWidget\";\nimport RadioWidget from \"../RadioWidget/RadioWidget\";\nimport RangeWidget from \"../RangeWidget/RangeWidget\";\nimport SelectWidget from \"../SelectWidget/SelectWidget\";\nimport TextareaWidget from \"../TextareaWidget/TextareaWidget\";\nimport TextWidget from \"../TextWidget/TextWidget\";\nimport UpDownWidget from \"../UpDownWidget/UpDownWidget\";\nimport URLWidget from \"../URLWidget/URLWidget\";\n\nexport default {\n  AltDateWidget,\n  AltDateTimeWidget,\n  CheckboxWidget,\n  CheckboxesWidget,\n  ColorWidget,\n  DateWidget,\n  DateTimeWidget,\n  EmailWidget,\n  PasswordWidget,\n  RadioWidget,\n  RangeWidget,\n  SelectWidget,\n  TextareaWidget,\n  TextWidget,\n  UpDownWidget,\n  URLWidget,\n};\n","import React from \"react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport TextWidget from '../TextWidget';\n\nexport default (props: WidgetProps) => <TextWidget {...props} />;","import React from \"react\";\nimport { WidgetProps } from \"@rjsf/core\";\nimport TextWidget from '../TextWidget';\n\nexport default (props: WidgetProps) => <TextWidget {...props} />;","import React from \"react\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nimport TextWidget from \"../TextWidget\";\n\nconst EmailWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n  let options = {\n    ...props.options,\n    props: {\n      type: \"email\",\n      ...uiProps,\n    },\n  };\n  return (\n    <TextWidget\n      {...props}\n      options={options}\n      value={props.value}\n      onChange={props.onChange}\n      {...uiProps}\n    />\n  );\n};\n\nexport default EmailWidget;\n","import React from \"react\";\n\nimport { WidgetProps, utils } from \"@rjsf/core\";\n\nimport TextWidget from \"../TextWidget\";\n\nconst PasswordWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n  let options = {\n    ...props.options,\n    props: {\n      type: \"password\",\n      ...uiProps,\n    },\n  };\n  return (\n    <TextWidget\n      {...props}\n      options={options}\n      value={props.value}\n      onChange={props.onChange}\n      {...uiProps}\n    />\n  );\n};\n\nexport default PasswordWidget;\n","import React from \"react\";\n\nimport { WidgetProps } from \"@rjsf/core\";\n\nimport TextWidget from '../TextWidget';\n\nconst TextareaWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n  let options = {\n    ...props.options,\n    \"props\": {\n      multiline: true,\n      ...uiProps\n    }\n  };\n  // TODO: rows and columns.\n  return (\n    <TextWidget {...props} options={options} />\n  );\n}\n\nexport default TextareaWidget;","import React from \"react\";\n\nimport { WidgetProps, utils } from \"@rjsf/core\";\n\nimport TextWidget from \"../TextWidget\";\n\nconst URLWidget = (props: WidgetProps) => {\n  const uiProps: any = props.options[\"props\"] || {};\n  let options = {\n    ...props.options,\n    props: {\n      type: \"url\",\n      ...uiProps,\n    },\n  };\n  return (\n    <TextWidget\n      {...props}\n      options={options}\n      value={props.value}\n      onChange={props.onChange}\n      {...uiProps}\n    />\n  );\n};\n\nexport default URLWidget;\n","import React from 'react';\nimport ArrayFieldTemplate from '../ArrayFieldTemplate';\nimport ErrorList from '../ErrorList';\nimport Fields from '../Fields';\nimport FieldTemplate from '../FieldTemplate';\nimport ObjectFieldTemplate from '../ObjectFieldTemplate';\nimport SubmitButton from '../SubmitButton';\nimport Widgets from '../Widgets';\n\nimport { ThemeProps } from '@rjsf/core';\nimport { utils } from '@rjsf/core';\nconst { getDefaultRegistry } = utils;\n\nconst { fields, widgets } = getDefaultRegistry();\n\nconst Theme: ThemeProps = {\n  ArrayFieldTemplate,\n  fields: { ...fields, ...Fields },\n  FieldTemplate,\n  ObjectFieldTemplate,\n  widgets: { ...widgets, ...Widgets },\n  ErrorList,\n  children: React.createElement(SubmitButton)\n};\n\nexport default Theme;\n","import React from \"react\";\nimport { MessageBar, MessageBarType } from \"@fluentui/react\";\nimport { Label } from \"@fluentui/react\";\nimport { ErrorListProps } from \"@rjsf/core\";\nconst styles = {\n  root: [\n    {\n      fontSize: 24,\n    },\n  ],\n};\n\nconst ErrorList = ({ errors }: ErrorListProps) => (\n  <>\n    {errors.map((error, i) => {\n      return (\n        <MessageBar\n          key={i}\n          messageBarType={MessageBarType.error}\n          isMultiline={false}\n          dismissButtonAriaLabel=\"Close\">\n          {error.stack}\n        </MessageBar>\n      );\n    })}\n  </>\n);\n\nexport default ErrorList;\n","import { withTheme, FormProps } from '@rjsf/core';\n\nimport Theme from '../Theme';\nimport { StatelessComponent } from 'react';\n\nconst FuiForm: React.ComponentClass<FormProps<any>> | StatelessComponent<FormProps<any>>  = withTheme(Theme);\n\nexport default FuiForm;\n","import FuiForm from \"./FuiForm/FuiForm\";\nimport { initializeIcons } from \"@fluentui/react\";\n\nexport { default as Fields } from \"./Fields\";\nexport { default as FieldTemplate } from \"./FieldTemplate\";\nexport { default as FuiForm } from \"./FuiForm\";\nexport { default as ObjectFieldTemplate } from \"./ObjectFieldTemplate\";\nexport { default as Theme } from \"./Theme\";\nexport { default as Widgets } from \"./Widgets\";\n\ninitializeIcons();\n\nexport default FuiForm;\n"],"names":["addIcon","iconName","AddButton","props","React","CommandBarButton","style","height","iconProps","text","className","onClick","e","disabled","mappings","remove","IconButton","icon","color","rightJustify","isMultiSelect","utils","getDefaultRegistry","ArrayFieldTitle","title","TitleField","id","idSchema","$id","required","ArrayFieldDescription","description","DescriptionField","DefaultArrayItem","key","dir","children","textAlign","readonly","hasMoveUp","onReorderClick","index","hasMoveDown","onDropIndexClick","DefaultFixedArrayFieldTemplate","uiSchema","schema","items","map","canAdd","onAddClick","DefaultNormalArrayFieldTemplate","p","styles","root","fontSize","marginBottom","paddingBottom","Text","Label","FieldTemplate","displayLabel","rawErrors","rawHelp","rawDescription","classNames","replace","length","List","ObjectFieldTemplate","properties","element","content","PrimaryButton","type","allowedProps","TextWidget","label","value","onChange","onBlur","onFocus","autofocus","options","uiProps","_pick","TextField","autoFocus","readOnly","name","target","emptyValue","errorMessage","join","styles_red","fontWeight","fontFamily","pad","controlClass","mergeStyleSets","control","margin","parseDate","dateStr","split","parseInt","Date","localToUTC","utcToLocal","rangeSpec","AltDateWidget","AltDateTimeWidget","CheckboxWidget","_onChange","useCallback","checked","Checkbox","CheckboxesWidget","enumOptions","enumDisabled","option","_ev","all","selected","at","indexOf","slice","concat","sort","a","b","selectValue","filter","v","deselectValue","_onBlur","_onFocus","itemDisabled","ColorWidget","ColorPicker","getColorFromString","ev","colorObj","hex","alphaType","showPreview","DateWidget","placeholder","DatePicker","firstDayOfWeek","DayOfWeek","Sunday","ariaLabel","isRequired","onSelectDate","date","formatted","getFullYear","getMonth","getDate","formatDate","DateTimeWidget","EmailWidget","PasswordWidget","RadioWidget","newOptions","ChoiceGroup","selectedKey","RangeWidget","sliderProps","Slider","min","max","step","snapToStep","SelectWidget","multiple","Dropdown","multiSelect","defaultSelectedKey","item","valueOrDefault","TextareaWidget","multiline","UpDownWidget","undefined","Infinity","requiredSymbol","htmlFor","SpinButton","incrementButtonAriaLabel","decrementButtonAriaLabel","Number","onIncrement","onDecrement","URLWidget","widgets","Theme","ArrayFieldTemplate","registry","rootSchema","fields","Fields","Widgets","ErrorList","errors","error","i","MessageBar","messageBarType","MessageBarType","isMultiline","dismissButtonAriaLabel","stack","createElement","SubmitButton","FuiForm","withTheme","initializeIcons"],"mappings":"ocAMA,IAAMA,EAAsB,CAAEC,SAAU,OAElCC,EAAY,SAACC,UACjBC,gBAACC,oBACCC,MAAO,CAAEC,OAAQ,QACjBC,UAAWR,EACXS,KAAK,WACLC,UAAWP,EAAMO,UACjBC,QAAS,SAAAC,UAAKT,EAAMQ,QAAQC,IAC5BC,SAAUV,EAAMU,YCVdC,EAAkC,CACtCC,OAAQ,oBACI,kBACE,mBAOAZ,UACfC,gBAACY,cACEH,SAAUV,EAAMU,SAChBF,QAAS,SAAAC,UAAKT,EAAMQ,QAAQC,IAC5BJ,UAAW,CACTP,SAAUa,EAASX,EAAMc,OAE3BC,MAAM,eCbJC,EAAe,OACZ,SAGDC,EAAsCC,QAAtCD,cAAeE,EAAuBD,QAAvBC,mBAoBjBC,EAAkB,gBAGtBC,IAAAA,aAGKA,EAKEpB,kBAVPqB,YAUmBC,KATnBC,SAQuBC,cACIJ,MAAOA,EAAOK,WAPzCA,WAGS,MAaLC,EAAwB,gBAG5BC,IAAAA,mBAEKA,EAKE3B,kBATP4B,kBASyBN,KARzBC,SAOuBC,oBACUG,YAAaA,IAJrC,MAQLE,EAAmB,SAAC9B,UAEtBC,uBAAK8B,IAAK/B,EAAM+B,IAAKxB,UAAU,UAAUyB,IAAI,OAC3C/B,uBAAKM,UAAU,eACbN,uBAAKM,UAAU,oCACbN,uBAAKM,UAAU,eACdP,EAAMiC,WAGThC,uBAAKM,UAAU,mCAAmCJ,MAAO,CAAC+B,UAAW,UACnEjC,gBAACY,GACCC,KAAK,WACLP,UAAU,qBACVG,SAAUV,EAAMU,UAAYV,EAAMmC,WAAanC,EAAMoC,UACrD5B,QAASR,EAAMqC,eAAerC,EAAMsC,MAAOtC,EAAMsC,MAAQ,KAE3DrC,gBAACY,GACCC,KAAK,aACLP,UAAU,uBACVG,SAAUV,EAAMU,UAAYV,EAAMmC,WAAanC,EAAMuC,YACrD/B,QAASR,EAAMqC,eAAerC,EAAMsC,MAAOtC,EAAMsC,MAAQ,KAE3DrC,gBAACY,GACCC,KAAK,SACLP,UAAU,oBACVG,SAAUV,EAAMU,UAAYV,EAAMmC,SAClC3B,QAASR,EAAMwC,iBAAiBxC,EAAMsC,aAQ5CG,EAAiC,SAACzC,UAEpCC,4BAAUM,UAAWP,EAAMO,WACzBN,gBAACmB,GACCW,yBAA0B/B,EAAMwB,SAASC,IACzCH,WAAYtB,EAAMsB,WAClBE,SAAUxB,EAAMwB,SAChBH,MAAOrB,EAAM0C,SAAS,aAAe1C,EAAMqB,MAC3CK,SAAU1B,EAAM0B,YAGhB1B,EAAM0C,SAAS,mBAAqB1C,EAAM2C,OAAOf,cACjD3B,uBACEM,UAAU,oBACVwB,yBAA0B/B,EAAMwB,SAASC,KACxCzB,EAAM0C,SAAS,mBAAqB1C,EAAM2C,OAAOf,aAItD3B,uBACEM,UAAU,sBACVwB,uBAAwB/B,EAAMwB,SAASC,KACtCzB,EAAM4C,OAAS5C,EAAM4C,MAAMC,IAAIf,IAGjC9B,EAAM8C,QACL7C,wBAAME,MAAOa,GACXf,gBAACF,GACCQ,UAAU,iBACVC,QAASR,EAAM+C,WACfrC,SAAUV,EAAMU,UAAYV,EAAMmC,cAQxCa,EAAkC,SAAChD,UAErCC,gCACEA,gBAACmB,GACCW,yBAA0B/B,EAAMwB,SAASC,IACzCH,WAAYtB,EAAMsB,WAClBE,SAAUxB,EAAMwB,SAChBH,MAAOrB,EAAM0C,SAAS,aAAe1C,EAAMqB,MAC3CK,SAAU1B,EAAM0B,YAGhB1B,EAAM0C,SAAS,mBAAqB1C,EAAM2C,OAAOf,cACjD3B,gBAAC0B,GACCI,+BAAgC/B,EAAMwB,SAASC,IAC/CI,iBAAkB7B,EAAM6B,iBACxBL,SAAUxB,EAAMwB,SAChBI,YACE5B,EAAM0C,SAAS,mBAAqB1C,EAAM2C,OAAOf,cAKtD5B,EAAM4C,OAAS5C,EAAM4C,MAAMC,KAAI,SAAAI,UAAKnB,EAAiBmB,MAErDjD,EAAM8C,QACL7C,wBAAME,MAAOa,GACXf,gBAACF,GACCQ,UAAU,iBACVC,QAASR,EAAM+C,WACfrC,SAAUV,EAAMU,UAAYV,EAAMmC,cCpKxCe,EAAS,CACbC,KAAM,CACJ,CACEC,SAAU,GACVC,aAAc,GACdC,cAAe,OCNN,CACbzB,iBCEuB,gBAAGD,IAAAA,mBACtBA,EACK3B,gBAACsD,YAAM3B,GAGT,MDNPN,WDSiB,mBACjBrB,gCACEA,gBAACuD,SAAMN,OAAQA,KAFG7B,UGDhBoC,EAAgB,gBACpBlC,IAAAA,GACAU,IAAAA,SACAyB,IACAC,UAAAA,aAAY,KACZC,IAAAA,QACAC,IAAAA,eACAC,IAAAA,kBAKAA,EAAa,uBAAyBA,EAAWC,QAAQ,aAAc,IAErE9D,uBAAKM,UAAWuD,EAAY3D,MAAO,CAACkD,aAAc,KAC/CpB,EAKA4B,GAAkB5D,gBAACsD,YAAMM,GACzBF,EAAUK,OAAS,GAAK/D,gBAACgE,QAAKrB,MAAOe,UACrCC,GAAW3D,gBAACsD,QAAKhC,GAAIA,GAAKqC,KChC3BM,EAAsB,gBAC1BrC,IAAAA,iBACAD,IAAAA,YAEAP,IAAAA,MACA8C,IAAAA,WAGA3C,IAAAA,gBAGEvB,mCAJFyC,SAKe,aAAerB,IACxBpB,kBAVNqB,YAWQC,GAAOC,EAASC,aAChBJ,MAAOA,EACPK,WAVRA,WAaKE,GACC3B,gBAAC4B,GACCN,GAAOC,EAASC,mBAChBG,YAAaA,IAIjB3B,uBAAKM,UAAU,UAAUyB,IAAI,OAC3B/B,uBAAKM,UAAU,eACZ4D,EAAWtB,KAAI,SAACuB,UAAiBA,EAAQC,mCC5BlDpE,2BACEA,2BACAA,uBAAKM,UAAU,uBACbN,gBAACqE,iBAAchE,KAAK,SAASiE,KAAK,cCAlCC,EAAe,CACnB,YACA,YACA,mBACA,aACA,aACA,QACA,gBACA,cACA,sBACA,SACA,SACA,iBACA,iBACA,YACA,eACA,QACA,WACA,WACA,eACA,WACA,2BACA,oBACA,yBACA,YACA,iBACA,YACA,oBACA,qBACA,iBACA,QACA,SACA,eACA,OACA,WACA,aACA,QAGIC,EAAa,gBACjBlD,IAAAA,GACAG,IAAAA,SACAS,IAAAA,SACAzB,IAAAA,SACAgE,IAAAA,MACAC,IAAAA,MACAC,IAAAA,SACAC,IAAAA,OACAC,IAAAA,QACAC,IAAAA,UACAC,IAAAA,QACArC,IAAAA,OACAgB,IAAAA,UAYMsB,EAAUC,EAAMF,EAAQhF,OAAS,GAAIwE,UAEzCvE,gBAACkF,2BACC5D,GAAIA,EACJmD,MAAOA,GAAS/B,EAAOtB,MACvB+D,UAAWL,EACXrD,SAAUA,EACVhB,SAAUA,EACV2E,SAAUlD,EACVmD,KAAMA,KACNf,KAAM5B,EAAO4B,KACbI,MAAOA,GAAgB,GACvBC,SAtBc,gBACND,IAAVY,OAAUZ,aAEVC,EAAmB,KAAVD,EAAeK,EAAQQ,WAAab,IAoB3CE,OAnBY,mBACdA,EAAOtD,IADUgE,OAAUZ,QAoBzBG,QAlBa,mBAEyBA,EAAQvD,IADhDgE,OAAUZ,QAkBRc,cAAe9B,GAAa,IAAI+B,KAAK,OACjCT,KChFGT,EAAe,CAC1B,kBACA,YACA,oBACA,cACA,UACA,UACA,qBACA,YACA,eACA,iBACA,uBACA,WACA,gBACA,aACA,cACA,QACA,WACA,gBACA,SACA,SCpBImB,EAAa,CAEb5E,MAAO,mBACPqC,SAAU,GACVwC,WAAY,SACZC,+ICEAF,EAAa,CAEjB5E,MAAO,mBACPqC,SAAU,GACVwC,WAAY,SACZC,+IAIIrB,EAAe,CACnB,eACA,QACA,UACA,WACA,YACA,oBACA,WACA,WACA,aACA,YACA,aACA,YACA,QACA,SACA,eC1BMsB,EAAQ5E,QAAR4E,IAGFtB,EAAe,CACnB,eACA,SACA,QACA,eACA,gBACA,YACA,aACA,eACA,QACA,aACA,WACA,YACA,aACA,kBACA,uBACA,2BACA,iBACA,mBACA,cACA,QACA,QACA,aACA,sBACA,iBACA,UACA,wBACA,yBACA,kBACA,kBACA,gBACA,aACA,YACA,oBACA,UACA,UACA,oBACA,eACA,qBACA,kBACA,YAGIuB,EAAeC,iBAAe,CAClCC,QAAS,CACPC,OAAQ,gBAiBNC,EAAY,SAACC,MACZA,SAGsBA,EAAQC,MAAM,KAAKxD,KAAI,SAAApC,UAAK6F,SAAS7F,aACvD,IAAI8F,eAAmB,UC3E1BC,EAA2BtF,QAA3BsF,WAAYC,EAAevF,QAAfuF,WCAdjC,EAAe,CACnB,eACA,UACA,qBACA,cACA,WACA,QACA,YACA,QACA,SACA,kBCTMkC,EAAcxF,QAAdwF,UAEFf,EAAa,CAEjB5E,MAAO,mBACPqC,SAAU,GACVwC,WAAY,SACZC,+IAIIrB,EAAe,CACnB,eACA,UACA,QACA,QACA,eACA,QACA,MACA,MACA,OACA,YACA,WACA,YACA,gBACA,WACA,WACA,aACA,YACA,cACA,cACA,kBChCIA,EAAe,CACnB,cACA,UACA,WACA,YACA,gBACA,sBACA,sBACA,gBACA,oBACA,gBACA,iBACA,sBACA,eACA,uBACA,mBACA,aACA,cACA,QACA,SAGA,eACA,QACA,YACA,KACA,YACA,qBACA,cACA,cACA,UACA,oBACA,eACA,eACA,iBACA,YACA,WACA,WACA,eACA,aACA,eACA,cACA,uBCzCMkC,EAAcxF,QAAdwF,UAGFlC,EAAe,CACnB,kBACA,YACA,oBACA,cACA,eACA,gBACA,YACA,eACA,2BACA,sBACA,eACA,WACA,wBACA,gBACA,kBACA,YACA,2BACA,sBACA,aACA,cACA,QACA,gBACA,MACA,MACA,SACA,cACA,UACA,cACA,aACA,YACA,OACA,SACA,QACA,QACA,sBACA,WC7Ba,CACbmC,uBCdc3G,UAAuBC,gBAACwE,mBAAezE,KDerD4G,2BEfc5G,UAAuBC,gBAACwE,mBAAezE,KFgBrD6G,eTSqB,SAAC7G,OAEpBuB,EAYEvB,EAZFuB,GACAoD,EAWE3E,EAXF2E,MAEAjE,EASEV,EATFU,SACAyB,EAQEnC,EARFmC,SACAuC,EAOE1E,EAPF0E,MACA/B,EAME3C,EANF2C,OACAoC,EAKE/E,EALF+E,UACAH,EAIE5E,EAJF4E,SACAC,EAGE7E,EAHF6E,OACAC,EAEE9E,EAFF8E,QACAE,EACEhF,EADFgF,QAGI8B,EAAY7G,EAAM8G,aAAY,WAAKC,mFACvCpC,EAASoC,KACR,IASG/B,EAAUC,EAAMF,EAAQhF,OAAS,GAAIwE,UAGzCvE,gCACIA,gBAACgH,0BACC1F,GAAIA,EACJmD,MAAOA,GAAS/B,EAAOtB,MACvBX,SAAUA,GAAYyB,EACtBiD,UAAWL,EACXF,OAhBQ,mBAE2BA,EAAOtD,IADhDgE,OAAUZ,QAgBJG,QAdS,mBAE0BA,EAAQvD,IADjDgE,OAAUZ,QAcJqC,aAA0B,IAAVrC,GAAgCA,EAChDC,SAAUkC,GACN7B,MShDZiC,iBRMuB,gBACvBvE,IAAAA,OAC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"}